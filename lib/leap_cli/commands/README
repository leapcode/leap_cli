This directory contains ruby source files that define the available sub-commands of the `leap` executable.

For example, the command:

  leap init <directory>

Lives in lib/leap_cli/commands/project.rb

These files use a DSL (called GLI) for defining command suites.
See https://github.com/davetron5000/gli for more information.


      c.command
      c.commands
      c.default_command
      c.default_value
      c.get_default_command
      c.commands
      c.commands_declaration_order

      c.flag
      c.flags
      c.switch
      c.switches

      c.long_desc

      c.default_desc
      c.default_description
      c.desc
      c.description
      c.long_description
      c.context_description
      c.usage

      c.arg_name
      c.arguments_description
      c.arguments_options

      c.skips_post
      c.skips_pre
      c.skips_around

      c.action

      c.copy_options_to_aliases
      c.nodoc
      c.aliases
      c.execute
      c.names


#desc 'Describe some switch here'
#switch [:s,:switch]

#desc 'Describe some flag here'
#default_value 'the default'
#arg_name 'The name of the argument'
#flag [:f,:flagname]

# desc 'Describe deploy here'
# arg_name 'Describe arguments to deploy here'
# command :deploy do |c|
#   c.action do |global_options,options,args|
#     puts "deploy command ran"
#   end
# end

# desc 'Describe dryrun here'
# arg_name 'Describe arguments to dryrun here'
# command :dryrun do |c|
#   c.action do |global_options,options,args|
#     puts "dryrun command ran"
#   end
# end

# desc 'Describe add-node here'
# arg_name 'Describe arguments to add-node here'
# command :"add-node" do |c|
#   c.desc 'Describe a switch to init'
#   c.switch :s
#
#   c.desc 'Describe a flag to init'
#   c.default_value 'default'
#   c.flag :f
#   c.action do |global_options,options,args|
#     puts "add-node command ran"
#   end
# end

# post do |global,command,options,args|
#   # Post logic here
#   # Use skips_post before a command to skip this
#   # block on that command only
# end

# on_error do |exception|
#   # Error logic here
#   # return false to skip default error handling
#   true
# end
